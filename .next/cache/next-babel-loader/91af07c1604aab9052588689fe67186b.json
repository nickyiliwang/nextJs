{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\w_yil\\\\OneDrive\\\\Desktop\\\\nextJs\\\\pages\\\\fetch.js\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport React, { useState } from \"react\";\nconst {\n  0: show,\n  1: setShow\n} = useState(\"batman\");\n\nconst handleSubmit = () => {};\n\nconst Batman = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, __jsx(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Search For TV Shows\"), __jsx(\"form\", {\n  onSubmit: () => handleSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(\"input\", {\n  onChange: handleOnChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, show.name))))));\n\nBatman.getInitialProps = async function () {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Batman;","map":{"version":3,"sources":["C:/Users/w_yil/OneDrive/Desktop/nextJs/pages/fetch.js"],"names":["Layout","Link","fetch","React","useState","show","setShow","handleSubmit","Batman","props","handleOnChange","shows","map","id","name","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAM;AAAA,KAACC,IAAD;AAAA,KAAOC;AAAP,IAAkBF,QAAQ,CAAC,QAAD,CAAhC;;AAEA,MAAMG,YAAY,GAAG,MAAM,CAI1B,CAJD;;AAMA,MAAMC,MAAM,GAAGC,KAAK,IAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAM,EAAA,QAAQ,EAAE,MAAMF,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAO,EAAA,QAAQ,EAAEG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBP,IAAI,IACnB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACQ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKR,IAAI,CAACQ,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIR,IAAI,CAACS,IAAT,CADF,CADF,CADD,CADH,CALF,CADF;;AAkBAN,MAAM,CAACO,eAAP,GAAyB,kBAAiB;AACxC,QAAMC,GAAG,GAAG,MAAMd,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMe,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAEM,IAAI,CAACL,GAAL,CAASU,KAAK,IAAIA,KAAK,CAACjB,IAAxB;AADF,GAAP;AAGD,CATD;;AAWA,eAAeG,MAAf","sourcesContent":["import Layout from \"../components/MyLayout\";\r\nimport Link from \"next/link\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst [show, setShow] = useState(\"batman\")\r\n\r\nconst handleSubmit = () => {\r\n\r\n\r\n\r\n}\r\n\r\nconst Batman = props => (\r\n  <Layout>\r\n    <h2>Search For TV Shows</h2>\r\n    <form onSubmit={() => handleSubmit}>\r\n      <input onChange={handleOnChange}></input>\r\n    </form>\r\n    <ul>\r\n      {props.shows.map(show => (\r\n        <li key={show.id}>\r\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n            <a>{show.name}</a>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </Layout>\r\n);\r\n\r\nBatman.getInitialProps = async function() {\r\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default Batman;\r\n"]},"metadata":{},"sourceType":"module"}