{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\w_yil\\\\OneDrive\\\\Desktop\\\\nextJs\\\\pages\\\\quotes.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from \"swr\";\nimport Layout from \"../components/MyLayout\";\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Quotes() {\n  // no search/filter\n  // const { data, error } = useSWR(\"/api/randomQuote\", fetcher);\n  // with search/filter\n  var _useSWR = useSWR(\"/api/randomQuote\".concat(query.author ? \"?author\" + query.author : \"\"), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error; // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n\n  var author = data === null || data === void 0 ? void 0 : data.author;\n  var quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = \"Loading...\";\n  if (error) quote = \"Failed to fetch the quote.\";\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"main\", {\n    className: \"jsx-2451769421\" + \" \" + \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-2451769421\" + \" \" + \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-2451769421\" + \" \" + \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"- \", author), __jsx(_JSXStyle, {\n    id: \"2451769421\",\n    __self: this\n  }, \"main.jsx-2451769421{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-2451769421{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-2451769421{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcd195aWxcXE9uZURyaXZlXFxEZXNrdG9wXFxuZXh0SnNcXHBhZ2VzXFxxdW90ZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0NvQixBQUd1QixBQU1VLEFBTUcsVUFYUCxVQU1GLEdBTUEsR0FYSSxRQU1ILEdBTUEsT0FYRyxLQU1FLEdBTXRCLFVBWEEsT0FNQSIsImZpbGUiOiJDOlxcVXNlcnNcXHdfeWlsXFxPbmVEcml2ZVxcRGVza3RvcFxcbmV4dEpzXFxwYWdlc1xccXVvdGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVzZVNXUiBmcm9tIFwic3dyXCI7XHJcbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvTXlMYXlvdXRcIjtcclxuXHJcbmZ1bmN0aW9uIGZldGNoZXIodXJsKSB7XHJcbiAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyID0+IHIuanNvbigpKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUXVvdGVzKCkge1xyXG4gIC8vIG5vIHNlYXJjaC9maWx0ZXJcclxuICAvLyBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSB1c2VTV1IoXCIvYXBpL3JhbmRvbVF1b3RlXCIsIGZldGNoZXIpO1xyXG5cclxuICAvLyB3aXRoIHNlYXJjaC9maWx0ZXJcclxuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSB1c2VTV1IoXHJcbiAgICBgL2FwaS9yYW5kb21RdW90ZSR7cXVlcnkuYXV0aG9yID8gXCI/YXV0aG9yXCIgKyBxdWVyeS5hdXRob3IgOiBcIlwifWAsXHJcbiAgICBmZXRjaGVyXHJcbiAgKTtcclxuXHJcbiAgLy8gVGhlIGZvbGxvd2luZyBsaW5lIGhhcyBvcHRpb25hbCBjaGFpbmluZywgYWRkZWQgaW4gTmV4dC5qcyB2OS4xLjUsXHJcbiAgLy8gaXMgdGhlIHNhbWUgYXMgYGRhdGEgJiYgZGF0YS5hdXRob3JgXHJcblxyXG4gIGNvbnN0IGF1dGhvciA9IGRhdGE/LmF1dGhvcjtcclxuICBsZXQgcXVvdGUgPSBkYXRhPy5xdW90ZTtcclxuXHJcbiAgaWYgKCFkYXRhKSBxdW90ZSA9IFwiTG9hZGluZy4uLlwiO1xyXG4gIGlmIChlcnJvcikgcXVvdGUgPSBcIkZhaWxlZCB0byBmZXRjaCB0aGUgcXVvdGUuXCI7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8TGF5b3V0PlxyXG4gICAgICA8bWFpbiBjbGFzc05hbWU9XCJjZW50ZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInF1b3RlXCI+e3F1b3RlfTwvZGl2PlxyXG4gICAgICAgIHthdXRob3IgJiYgPHNwYW4gY2xhc3NOYW1lPVwiYXV0aG9yXCI+LSB7YXV0aG9yfTwvc3Bhbj59XHJcblxyXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgIG1haW4ge1xyXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDkwMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDMwMHB4IGF1dG87XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5xdW90ZSB7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBjdXJzaXZlO1xyXG4gICAgICAgICAgICBjb2xvcjogI2UyNDNkZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5hdXRob3Ige1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgY29sb3I6ICM1NTk4MzQ7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgIDwvbWFpbj5cclxuICAgIDwvTGF5b3V0PlxyXG4gICk7XHJcbn1cclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\w_yil\\\\\\\\OneDrive\\\\\\\\Desktop\\\\\\\\nextJs\\\\\\\\pages\\\\\\\\quotes.js */\")));\n}","map":{"version":3,"sources":["C:/Users/w_yil/OneDrive/Desktop/nextJs/pages/quotes.js"],"names":["useSWR","Layout","fetcher","url","fetch","then","r","json","Quotes","query","author","data","error","quote"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACD;;AAED,eAAe,SAASC,MAAT,GAAkB;AAC/B;AACA;AAEA;AAJ+B,gBAKPR,MAAM,2BACTS,KAAK,CAACC,MAAN,GAAe,YAAYD,KAAK,CAACC,MAAjC,GAA0C,EADjC,GAE5BR,OAF4B,CALC;AAAA,MAKvBS,IALuB,WAKvBA,IALuB;AAAA,MAKjBC,KALiB,WAKjBA,KALiB,EAU/B;AACA;;;AAEA,MAAMF,MAAM,GAAGC,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAED,MAArB;AACA,MAAIG,KAAK,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,KAAlB;AAEA,MAAI,CAACF,IAAL,EAAWE,KAAK,GAAG,YAAR;AACX,MAAID,KAAJ,EAAWC,KAAK,GAAG,4BAAR;AAEX,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEGH,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFb;AAAA;AAAA;AAAA,uxFADF,CADF;AA4BD","sourcesContent":["import useSWR from \"swr\";\r\nimport Layout from \"../components/MyLayout\";\r\n\r\nfunction fetcher(url) {\r\n  return fetch(url).then(r => r.json());\r\n}\r\n\r\nexport default function Quotes() {\r\n  // no search/filter\r\n  // const { data, error } = useSWR(\"/api/randomQuote\", fetcher);\r\n\r\n  // with search/filter\r\n  const { data, error } = useSWR(\r\n    `/api/randomQuote${query.author ? \"?author\" + query.author : \"\"}`,\r\n    fetcher\r\n  );\r\n\r\n  // The following line has optional chaining, added in Next.js v9.1.5,\r\n  // is the same as `data && data.author`\r\n\r\n  const author = data?.author;\r\n  let quote = data?.quote;\r\n\r\n  if (!data) quote = \"Loading...\";\r\n  if (error) quote = \"Failed to fetch the quote.\";\r\n\r\n  return (\r\n    <Layout>\r\n      <main className=\"center\">\r\n        <div className=\"quote\">{quote}</div>\r\n        {author && <span className=\"author\">- {author}</span>}\r\n\r\n        <style jsx>{`\r\n          main {\r\n            width: 90%;\r\n            max-width: 900px;\r\n            margin: 300px auto;\r\n            text-align: center;\r\n          }\r\n          .quote {\r\n            font-family: cursive;\r\n            color: #e243de;\r\n            font-size: 24px;\r\n            padding-bottom: 10px;\r\n          }\r\n          .author {\r\n            font-family: sans-serif;\r\n            color: #559834;\r\n            font-size: 20px;\r\n          }\r\n        `}</style>\r\n      </main>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}