{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\w_yil\\\\OneDrive\\\\Desktop\\\\nextJs\\\\pages\\\\fetch.js\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport React, { useState } from \"react\";\n\nvar Batman = function Batman(props) {\n  var _useState = useState(\"batman\"),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  getInitialProps();\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log(e.target.value);\n  };\n\n  var handleOnChange = function handleOnChange(e) {\n    console.log(e.target.value);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Search For TV Shows\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, show.name)));\n  })));\n};\n\nBatman.getInitialProps = function _callee(props) {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/search/shows?q=\".concat(props.show)));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Batman;","map":{"version":3,"sources":["C:/Users/w_yil/OneDrive/Desktop/nextJs/pages/fetch.js"],"names":["Layout","Link","fetch","React","useState","Batman","props","show","setShow","getInitialProps","handleSubmit","e","preventDefault","console","log","target","value","handleOnChange","shows","map","id","name","res","json","data","length","entry"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA,kBACEF,QAAQ,CAAC,QAAD,CADV;AAAA,MACfG,IADe;AAAA,MACTC,OADS;;AAEtBC,EAAAA,eAAe;;AAEf,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACD,GAHD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAN,CAAC,EAAI;AAC1BE,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACD,GAFD;;AAGA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAEO,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACY,KAAN,CAAYC,GAAZ,CAAgB,UAAAZ,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACa,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQb,IAAI,CAACa,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIb,IAAI,CAACc,IAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CALF,CADF;AAiBD,CA5BD;;AA8BAhB,MAAM,CAACI,eAAP,GAAyB,iBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLJ,KAAK,iDAA0CI,KAAK,CAACC,IAAhD,EADA;;AAAA;AACjBe,UAAAA,GADiB;AAAA;AAAA,2CAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEjBC,UAAAA,IAFiB;AAIvBX,UAAAA,OAAO,CAACC,GAAR,qCAAyCU,IAAI,CAACC,MAA9C;AAJuB,2CAMhB;AACLP,YAAAA,KAAK,EAAEM,IAAI,CAACL,GAAL,CAAS,UAAAO,KAAK;AAAA,qBAAIA,KAAK,CAACnB,IAAV;AAAA,aAAd;AADF,WANgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAWA,eAAeF,MAAf","sourcesContent":["import Layout from \"../components/MyLayout\";\r\nimport Link from \"next/link\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Batman = props => {\r\n  const [show, setShow] = useState(\"batman\");\r\n  getInitialProps()\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n  };\r\n  const handleOnChange = e => {\r\n    console.log(e.target.value);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <h2>Search For TV Shows</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input onChange={handleOnChange}></input>\r\n      </form>\r\n      <ul>\r\n        {props.shows.map(show => (\r\n          <li key={show.id}>\r\n            <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n              <a>{show.name}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nBatman.getInitialProps = async function(props) {\r\n  const res = await fetch(`https://api.tvmaze.com/search/shows?q=${props.show}`);\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default Batman;\r\n"]},"metadata":{},"sourceType":"module"}